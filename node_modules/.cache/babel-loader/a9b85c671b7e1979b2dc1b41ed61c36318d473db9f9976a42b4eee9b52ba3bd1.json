{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/programming/graph/frisbee-graph/src/App.js\";\nimport React from 'react';\nimport 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { Bar } from 'react-chartjs-2';\nimport { LinearScale, BarElement, Chart } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FrisbeeGolfGraph = _ref => {\n  let {\n    datasets\n  } = _ref;\n  Chart.register(LinearScale, BarElement);\n  const chartData = {\n    labels: datasets[0].data.map((item, index) => `Hole ${index + 1}`),\n    datasets: datasets.map((dataset, index) => ({\n      label: dataset.label,\n      data: dataset.data,\n      backgroundColor: `rgba(75, 192, 192, 0.6)`,\n      borderColor: `rgba(75, 192, 192, 1)`,\n      borderWidth: 1\n    }))\n  };\n  const chartOptions = {\n    scales: {\n      y: {\n        type: 'linear',\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Scores'\n        }\n      },\n      x: {\n        type: 'linear',\n        // Change the scale type to linear\n        title: {\n          display: true,\n          text: 'Holes'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: chartData,\n    options: chartOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n_c = FrisbeeGolfGraph;\nconst App = () => {\n  const dataset1 = {\n    label: 'Player 1',\n    data: [3, 2, 4, 5, 3, 2, 4, 3, 2, 4]\n  };\n  const dataset2 = {\n    label: 'Player 2',\n    data: [4, 3, 5, 4, 2, 3, 4, 2, 3, 5]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ekeberg Frisbee Golf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FrisbeeGolfGraph, {\n      datasets: [dataset1, dataset2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FrisbeeGolfGraph\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","Bar","LinearScale","BarElement","Chart","jsxDEV","_jsxDEV","FrisbeeGolfGraph","_ref","datasets","register","chartData","labels","data","map","item","index","dataset","label","backgroundColor","borderColor","borderWidth","chartOptions","scales","y","type","beginAtZero","title","display","text","x","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","dataset1","dataset2","children","_c2","$RefreshReg$"],"sources":["/Users/admin/Documents/programming/graph/frisbee-graph/src/App.js"],"sourcesContent":["import React from 'react';\nimport 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { Bar } from 'react-chartjs-2';\nimport { LinearScale, BarElement, Chart } from 'chart.js';\n\nconst FrisbeeGolfGraph = ({ datasets }) => {\n  Chart.register(LinearScale, BarElement);\n\n  const chartData = {\n    labels: datasets[0].data.map((item, index) => `Hole ${index + 1}`),\n    datasets: datasets.map((dataset, index) => ({\n      label: dataset.label,\n      data: dataset.data,\n      backgroundColor: `rgba(75, 192, 192, 0.6)`,\n      borderColor: `rgba(75, 192, 192, 1)`,\n      borderWidth: 1,\n    })),\n  };\n\n  const chartOptions = {\n    scales: {\n      y: {\n        type: 'linear',\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Scores',\n        },\n      },\n      x: {\n        type: 'linear', // Change the scale type to linear\n        title: {\n          display: true,\n          text: 'Holes',\n        },\n      },\n    },\n  };\n\n  return <Bar data={chartData} options={chartOptions} />;\n};\n\n\nconst App = () => {\n  const dataset1 = {\n    label: 'Player 1',\n    data: [3, 2, 4, 5, 3, 2, 4, 3, 2, 4],\n  };\n\n  const dataset2 = {\n    label: 'Player 2',\n    data: [4, 3, 5, 4, 2, 3, 4, 2, 3, 5],\n  };\n\n  return (\n    <div>\n      <h1>Ekeberg Frisbee Golf</h1>\n      <FrisbeeGolfGraph datasets={[dataset1, dataset2]} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,UAAU;AACjB,OAAO,0BAA0B;AACjC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,WAAW,EAAEC,UAAU,EAAEC,KAAK,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,gBAAgB,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EACpCJ,KAAK,CAACM,QAAQ,CAACR,WAAW,EAAEC,UAAU,CAAC;EAEvC,MAAMQ,SAAS,GAAG;IAChBC,MAAM,EAAEH,QAAQ,CAAC,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAM,QAAOA,KAAK,GAAG,CAAE,EAAC,CAAC;IAClEP,QAAQ,EAAEA,QAAQ,CAACK,GAAG,CAAC,CAACG,OAAO,EAAED,KAAK,MAAM;MAC1CE,KAAK,EAAED,OAAO,CAACC,KAAK;MACpBL,IAAI,EAAEI,OAAO,CAACJ,IAAI;MAClBM,eAAe,EAAG,yBAAwB;MAC1CC,WAAW,EAAG,uBAAsB;MACpCC,WAAW,EAAE;IACf,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,QAAQ;QACdC,WAAW,EAAE,IAAI;QACjBC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,CAAC,EAAE;QACDL,IAAI,EAAE,QAAQ;QAAE;QAChBE,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,oBAAOvB,OAAA,CAACL,GAAG;IAACY,IAAI,EAAEF,SAAU;IAACoB,OAAO,EAAET;EAAa;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxD,CAAC;AAACC,EAAA,GAnCI7B,gBAAgB;AAsCtB,MAAM8B,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMC,QAAQ,GAAG;IACfpB,KAAK,EAAE,UAAU;IACjBL,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EACrC,CAAC;EAED,MAAM0B,QAAQ,GAAG;IACfrB,KAAK,EAAE,UAAU;IACjBL,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EACrC,CAAC;EAED,oBACEP,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAAkC,QAAA,EAAI;IAAoB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B7B,OAAA,CAACC,gBAAgB;MAACE,QAAQ,EAAE,CAAC6B,QAAQ,EAAEC,QAAQ;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACM,GAAA,GAjBIJ,GAAG;AAmBT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}