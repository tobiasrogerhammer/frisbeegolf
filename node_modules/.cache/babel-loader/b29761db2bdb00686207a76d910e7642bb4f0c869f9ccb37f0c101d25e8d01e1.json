{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/programming/frisbeegolf/frisbee-graph/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { Line } from 'react-chartjs-2';\nimport { LinearScale, CategoryScale, PointElement, LineElement, Chart } from 'chart.js';\nimport 'frisbee.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(LinearScale, CategoryScale, PointElement, LineElement);\nconst getInitialScores = holeCount => {\n  const scores = [];\n  for (let i = 0; i < holeCount; i++) {\n    scores.push(3); // Set the initial scores to par values (3)\n  }\n\n  return scores;\n};\nconst App = () => {\n  _s();\n  const [games, setGames] = useState([]); // State to store the list of games\n\n  const addGame = () => {\n    const newGame = {\n      id: games.length + 1,\n      parData: [3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n      userScores: getInitialScores(18)\n    };\n    setGames([...games, newGame]);\n  };\n  const handleScoreChange = (gameId, index, score) => {\n    if (score < 1) {\n      // If the score is lower than 1, display an error message or take appropriate action\n      alert(\"Score cannot be lower than 1\");\n      return;\n    }\n    setGames(prevGames => {\n      const updatedGames = prevGames.map(game => {\n        if (game.id === gameId) {\n          const updatedScores = [...game.userScores];\n          updatedScores[index] = score;\n          return {\n            ...game,\n            userScores: updatedScores\n          };\n        }\n        return game;\n      });\n      return updatedGames;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ekeberg Frisbee Golf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addGame,\n      children: \"Add Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), games.map(game => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Game \", game.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total Par: \", game.parData.reduce((acc, score) => acc + score, 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total Score: \", game.userScores.reduce((acc, score) => acc + score, 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: game.parData.map((_, index) => `Hole ${index + 1}`),\n          datasets: [{\n            label: 'Par',\n            data: game.parData,\n            borderColor: 'red',\n            borderWidth: 1,\n            fill: false\n          }, {\n            label: 'User',\n            data: game.userScores,\n            borderColor: 'blue',\n            borderWidth: 1,\n            fill: false\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              type: 'linear',\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Scores'\n              },\n              ticks: {\n                stepSize: 1\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Holes'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: game.userScores.map((score, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: score,\n          onChange: e => handleScoreChange(game.id, index, parseInt(e.target.value))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, game.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1SigPej7zBCdP+TOrLTQ8m2nQTQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Line","LinearScale","CategoryScale","PointElement","LineElement","Chart","jsxDEV","_jsxDEV","register","getInitialScores","holeCount","scores","i","push","App","_s","games","setGames","addGame","newGame","id","length","parData","userScores","handleScoreChange","gameId","index","score","alert","prevGames","updatedGames","map","game","updatedScores","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","reduce","acc","data","labels","_","datasets","label","borderColor","borderWidth","fill","options","scales","y","type","beginAtZero","title","display","text","ticks","stepSize","x","value","onChange","e","parseInt","target","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/programming/frisbeegolf/frisbee-graph/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { Line } from 'react-chartjs-2';\nimport { LinearScale, CategoryScale, PointElement, LineElement, Chart } from 'chart.js';\nimport 'frisbee.css';\n\nChart.register(LinearScale, CategoryScale, PointElement, LineElement);\n\nconst getInitialScores = (holeCount) => {\n  const scores = [];\n  for (let i = 0; i < holeCount; i++) {\n    scores.push(3); // Set the initial scores to par values (3)\n  }\n  return scores;\n};\n\nconst App = () => {\n  const [games, setGames] = useState([]); // State to store the list of games\n\n  const addGame = () => {\n    const newGame = {\n      id: games.length + 1,\n      parData: [3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n      userScores: getInitialScores(18),\n    };\n    setGames([...games, newGame]);\n  };\n\n  const handleScoreChange = (gameId, index, score) => {\n    if (score < 1) {\n      // If the score is lower than 1, display an error message or take appropriate action\n      alert(\"Score cannot be lower than 1\");\n      return;\n    }\n\n    setGames((prevGames) => {\n      const updatedGames = prevGames.map((game) => {\n        if (game.id === gameId) {\n          const updatedScores = [...game.userScores];\n          updatedScores[index] = score;\n          return { ...game, userScores: updatedScores };\n        }\n        return game;\n      });\n      return updatedGames;\n    });\n  };\n\n  return (\n    <div>\n      <h1>Ekeberg Frisbee Golf</h1>\n      <button onClick={addGame}>Add Game</button>\n      {games.map((game) => (\n        <div key={game.id}>\n          <h2>Game {game.id}</h2>\n          <div>Total Par: {game.parData.reduce((acc, score) => acc + score, 0)}</div>\n          <div>Total Score: {game.userScores.reduce((acc, score) => acc + score, 0)}</div>\n          <Line\n            data={{\n              labels: game.parData.map((_, index) => `Hole ${index + 1}`),\n              datasets: [\n                {\n                  label: 'Par',\n                  data: game.parData,\n                  borderColor: 'red',\n                  borderWidth: 1,\n                  fill: false,\n                },\n                {\n                  label: 'User',\n                  data: game.userScores,\n                  borderColor: 'blue',\n                  borderWidth: 1,\n                  fill: false,\n                },\n              ],\n            }}\n            options={{\n              scales: {\n                y: {\n                  type: 'linear',\n                  beginAtZero: true,\n                  title: {\n                    display: true,\n                    text: 'Scores',\n                  },\n                  ticks: {\n                    stepSize: 1,\n                  },\n                },\n                x: {\n                  title: {\n                    display: true,\n                    text: 'Holes',\n                  },\n                },\n              },\n            }}\n          />\n          <div>\n            {game.userScores.map((score, index) => (\n              <input\n                key={index}\n                type=\"number\"\n                value={score}\n                onChange={(e) => handleScoreChange(game.id, index, parseInt(e.target.value))}\n              />\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}